//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Expense.edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExpensesTrackerEntities1 : DbContext
    {
        public ExpensesTrackerEntities1()
            : base("name=ExpensesTrackerEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<RolePermission> RolePermissions { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<Deposit> Deposits { get; set; }
        public virtual DbSet<Expens> Expenses { get; set; }
        public virtual DbSet<LookUpDetail> LookUpDetails { get; set; }
        public virtual DbSet<Lookup> Lookups { get; set; }
    
        public virtual ObjectResult<string> GetUserPermissionsByUsername(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserPermissionsByUsername", userNameParameter);
        }
    
        public virtual ObjectResult<GetUsersSP_Result> GetUsersSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersSP_Result>("GetUsersSP");
        }
    
        public virtual ObjectResult<GetBudgetReport_Result> GetBudgetReport(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBudgetReport_Result>("GetBudgetReport", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<GetMonthlyBudgetNotification_Result> GetMonthlyBudgetNotification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMonthlyBudgetNotification_Result>("GetMonthlyBudgetNotification");
        }
    
        public virtual ObjectResult<GetMonthlyReport_Result> GetMonthlyReport(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMonthlyReport_Result>("GetMonthlyReport", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<GetTotalExpensesByCategory_Result> GetTotalExpensesByCategory(Nullable<int> year, Nullable<int> month, Nullable<int> day)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalExpensesByCategory_Result>("GetTotalExpensesByCategory", yearParameter, monthParameter, dayParameter);
        }
    
        public virtual ObjectResult<GetTotalExpensesByCategoryAndStatus_Result> GetTotalExpensesByCategoryAndStatus(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalExpensesByCategoryAndStatus_Result>("GetTotalExpensesByCategoryAndStatus", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<GetAllExpenses_Result> GetAllExpenses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllExpenses_Result>("GetAllExpenses");
        }
    }
}
